# Yet Anther Markup Language(.yml/yaml) ==> JSON子集
# 所有环境公用的配置属性
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: '*'
info:
  app-name: spring-cloud-alibaba-user-center
  author: lebron

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/user_center
    hikari:
      username: root
      password: kascendmysql
      # >= 6.x com.mysql.cj.jdbc.Driver
      # < com.mysql.jdbc.Driver
      driver-class-name: com.mysql.cj.jdbc.Driver
  cloud:
#    nacos:
#      # 指定 nacos server地址
#      server-addr: localhost:8848
    sentinel:
      # 开启饥饿加载
      eager: true
      filter:
        # 关闭/打开 sentinel 对 Spring MVC 的保护, todo 关闭了在注解上好像也生效，优先级需要考量
        enabled: false
        url-patterns: /**
      # 引入了阿里云 ahas 的服务(他来帮助管理)，可以把这个关闭
      transport:
        # 指定 sentinel 控制台地址
        dashboard: localhost:8080
#    stream:
#      rocketmq:
#        binder:
#          name-server: 127.0.0.1:9876
#      bindings:
#        output:
#          # 用来知道 topic
#          destination: stream-test-topic
#        my-output:
#          destination: stream-my-topic
#        input:
#          desination: stream-test-topic
#          group: binder-group
#        my-input:
#          destination: stream-my-topic
#          # RocketMQ一定要设置, 其他不需要
#          group: my -group

  #      #限流规则持久化: 推模式 Nacos （自己实现）文档 : http://www.imooc.com/article/289464
#      datasource:
#        # 名称随意
#        flow:
#          nacos:
#            server-addr: localhost:8848
#            dataId: ${spring.application.name}-flow-rules
#            groupId: SENTINEL_GROUP
#            # 规则类型，取值见：
#            # org.springframework.cloud.alibaba.sentinel.datasource.RuleType
#            rule-type: flow
#        degrade:
#          nacos:
#            server-addr: localhost:8848
#            dataId: ${spring.application.name}-degrade-rules
#            groupId: SENTINEL_GROUP
#            rule-type: degrade
#        system:
#          nacos:
#            server-addr: localhost:8848
#            dataId: ${spring.application.name}-system-rules
#            groupId: SENTINEL_GROUP
#            rule-type: system
#        authority:
#          nacos:
#            server-addr: localhost:8848
#            dataId: ${spring.application.name}-authority-rules
#            groupId: SENTINEL_GROUP
#            rule-type: authority
#        param-flow:
#          nacos:
#            server-addr: localhost:8848
#            dataId: ${spring.application.name}-param-flow-rules
#            groupId: SENTINEL_GROUP
#            rule-type: param-flow
  application:
    # 服务名称用-,不要用_
    name: user-center
  # 默认启动环境
  profiles:
    active: dev
  zipkin:
    base-url: http://localhost:9411/
    # 解决zipkin和nacos整合报错
    discoveryClientEnabled: false
  sleuth:
    sampler:
      # 抽样率，默认是0.1（10%）
      probability: 1.0

# 配置形式的 Ribbon 负载均衡规则，单个（细粒度）
#user-center:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
ribbon:
  eager-load:
    # 开启饥饿加载
    enabled: true
    clients: user-center

logging:
  level:
    # 建立在 dubug 级别下的
    com.lebron.usercenter.feignclient.UserCenterFeignClient: debug
    com.alibaba.nacos: error
    org.springframework.cloud.sleuth: debug
    com.lebron.usercenter.dao.user.UserMapper: debug

feign:
  sentinel:
    # 为 Feign 整合 Sentinel
    enabled: true
  client:
    config:
      # 想要调用的微服务名称, 单个（细粒度）
      #user-center:
      # 全局的日志级别
      default:
        loggerLevel: full
        requestInterceptors:
          - com.lebron.usercenter.feignclient.interceptor.TokenRelayRequestInterceptor

  httpclient:
    # 让 Feign 使用 apache httpclient 做请求，而不是默认的 urlConnection
    enabled: true
    # Feign 的最大连接数
    max-connections: 200
    # Feign 单个路径的最大连接数
    max-connections-per-route: 50
    # 需要加依赖包 feign-okhttp
  okhttp:
    enabled: false

resttemplate:
  sentinel:
    # 关闭 @SentinelRestTemplate 注解， 在开发时可以
    enabled: true

# 阿里云ahas服务管理
#ahas.namespace: default
#project.name: user-center
#ahas.license: 4657cb2cc35f49c99b9fe43d37c22434

rocketmq:
  name-server: 127.0.0.1:9876
  producer:
    # 必须指定group
    group: test-group
mybatis:
  configuration:
    map-underscore-to-camel-case: true
---
# 连字符
# profile=x的专用属性，也就是某个环境下的专用属性
# 开发环境
spring:
  profiles: dev
  cloud:
    nacos:
      discovery:
        metadata:
          # 自己这个实例的版本 NacosFinalRule
          #version: v1
          # 允许调用的提供者版本 NacosFinalRule
          #target-version: v1
          instance: a
        # 指定 namespace 只可以调用相同 namespace 下的实例
        #namespace: 299318ed-b54b-4a93-bf8b-d74e4a361df3
        # 指定集群名称 NacosSameClusterWeightedRule
        cluster-name: HZ
        # 权重，负载均衡 NacosWeightedRule
        #weight: 1
server:
  port: 8081

jwt:
  secret: lebron
  # 有效期，单位秒，默认2周
  expire-time-in-second: 1209600

---
# profile=y的专用属性，也就是某个环境下的专用属性
# 测试环境
spring:
  profiles: beta
  cloud:
    nacos:
      discovery:
        # 先在相同集群下访问
        cluster-name: SH
server:
  port: 8082


---
# profile=z的专用属性，也就是某个环境下的专用属性
# 生产环境
spring:
  profiles: prod
  cloud:
    nacos:
      discovery:
        # 先在相同集群下访问
        cluster-name: SZ
server:
  port: 8888

